{"ast":null,"code":"// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport astralLetterAndMarks from './astralLetterAndMarks';\nimport astralNumerals from './astralNumerals';\nimport bmpLetterAndMarks from './bmpLetterAndMarks';\nimport bmpNumerals from './bmpNumerals';\nimport hashtagSpecialChars from './hashtagSpecialChars';\nimport nonBmpCodePairs from './nonBmpCodePairs';\nimport regexSupplant from '../lib/regexSupplant';\nvar hashtagAlphaNumeric = regexSupplant(/(?:[#{bmpLetterAndMarks}#{bmpNumerals}#{hashtagSpecialChars}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}|#{astralNumerals}))/, {\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  bmpNumerals: bmpNumerals,\n  hashtagSpecialChars: hashtagSpecialChars,\n  nonBmpCodePairs: nonBmpCodePairs,\n  astralLetterAndMarks: astralLetterAndMarks,\n  astralNumerals: astralNumerals\n});\nexport default hashtagAlphaNumeric;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/twitter-text/dist/esm/regexp/hashtagAlphaNumeric.js"],"names":["astralLetterAndMarks","astralNumerals","bmpLetterAndMarks","bmpNumerals","hashtagSpecialChars","nonBmpCodePairs","regexSupplant","hashtagAlphaNumeric"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,oBAAP,MAAiC,wBAAjC;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,iBAAP,MAA8B,qBAA9B;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,mBAAP,MAAgC,uBAAhC;AACA,OAAOC,eAAP,MAA4B,mBAA5B;AACA,OAAOC,aAAP,MAA0B,sBAA1B;AACA,IAAIC,mBAAmB,GAAGD,aAAa,CAAC,oIAAD,EAAuI;AAC5KJ,EAAAA,iBAAiB,EAAEA,iBADyJ;AAE5KC,EAAAA,WAAW,EAAEA,WAF+J;AAG5KC,EAAAA,mBAAmB,EAAEA,mBAHuJ;AAI5KC,EAAAA,eAAe,EAAEA,eAJ2J;AAK5KL,EAAAA,oBAAoB,EAAEA,oBALsJ;AAM5KC,EAAAA,cAAc,EAAEA;AAN4J,CAAvI,CAAvC;AAQA,eAAeM,mBAAf","sourcesContent":["// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport astralLetterAndMarks from './astralLetterAndMarks';\nimport astralNumerals from './astralNumerals';\nimport bmpLetterAndMarks from './bmpLetterAndMarks';\nimport bmpNumerals from './bmpNumerals';\nimport hashtagSpecialChars from './hashtagSpecialChars';\nimport nonBmpCodePairs from './nonBmpCodePairs';\nimport regexSupplant from '../lib/regexSupplant';\nvar hashtagAlphaNumeric = regexSupplant(/(?:[#{bmpLetterAndMarks}#{bmpNumerals}#{hashtagSpecialChars}]|(?=#{nonBmpCodePairs})(?:#{astralLetterAndMarks}|#{astralNumerals}))/, {\n  bmpLetterAndMarks: bmpLetterAndMarks,\n  bmpNumerals: bmpNumerals,\n  hashtagSpecialChars: hashtagSpecialChars,\n  nonBmpCodePairs: nonBmpCodePairs,\n  astralLetterAndMarks: astralLetterAndMarks,\n  astralNumerals: astralNumerals\n});\nexport default hashtagAlphaNumeric;"]},"metadata":{},"sourceType":"module"}