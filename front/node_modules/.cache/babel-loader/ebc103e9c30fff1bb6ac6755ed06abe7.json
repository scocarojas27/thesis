{"ast":null,"code":"import _Object$getPrototypeOf from '../polyfills/objectGetPrototypeOf';\nimport _classCallCheck from '../polyfills/classCallCheck';\nimport _createClass from '../polyfills/createClass';\nimport _possibleConstructorReturn from '../polyfills/possibleConstructorReturn';\nimport _inherits from '../polyfills/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport NimbleEmoji from './emoji/nimble-emoji';\nimport Skins from './skins';\n\nvar SkinsEmoji = function (_Skins) {\n  _inherits(SkinsEmoji, _Skins);\n\n  function SkinsEmoji(props) {\n    _classCallCheck(this, SkinsEmoji);\n\n    var _this = _possibleConstructorReturn(this, (SkinsEmoji.__proto__ || _Object$getPrototypeOf(SkinsEmoji)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SkinsEmoji, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var skin = _props.skin;\n      var emojiProps = _props.emojiProps;\n      var data = _props.data;\n      var skinEmoji = _props.skinEmoji;\n      var i18n = _props.i18n;\n      var opened = this.state.opened;\n      var skinToneNodes = [];\n\n      for (var skinTone = 1; skinTone <= 6; skinTone++) {\n        var selected = skinTone === skin;\n        skinToneNodes.push(React.createElement('span', {\n          key: 'skin-tone-' + skinTone,\n          className: 'emoji-mart-skin-swatch custom' + (selected ? ' selected' : '')\n        }, React.createElement('span', {\n          onClick: this.handleClick,\n          'data-skin': skinTone,\n          className: 'emoji-mart-skin-tone-' + skinTone\n        }, NimbleEmoji({\n          emoji: skinEmoji,\n          data: data,\n          skin: skinTone,\n          backgroundImageFn: emojiProps.backgroundImageFn,\n          native: emojiProps.native,\n          set: emojiProps.set,\n          sheetSize: emojiProps.sheetSize,\n          size: 23\n        }))));\n      }\n\n      return React.createElement('div', {\n        className: 'emoji-mart-skin-swatches custom' + (opened ? ' opened' : '')\n      }, React.createElement('div', {\n        className: 'emoji-mart-skin-text' + (opened ? ' opened' : '')\n      }, i18n.skintext), skinToneNodes);\n    }\n  }]);\n\n  return SkinsEmoji;\n}(Skins);\n\nexport default SkinsEmoji;\nSkinsEmoji.propTypes\n/* remove-proptypes */\n= {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  emojiProps: PropTypes.object.isRequired,\n  skinTone: PropTypes.number,\n  skinEmoji: PropTypes.string.isRequired,\n  i18n: PropTypes.object\n};\nSkinsEmoji.defaultProps = {\n  onChange: function onChange() {},\n  skinTone: null\n};","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/front/node_modules/emoji-mart/dist-es/components/skins-emoji.js"],"names":["_Object$getPrototypeOf","_classCallCheck","_createClass","_possibleConstructorReturn","_inherits","React","PropTypes","NimbleEmoji","Skins","SkinsEmoji","_Skins","props","_this","__proto__","call","handleClick","bind","key","value","render","_props","skin","emojiProps","data","skinEmoji","i18n","opened","state","skinToneNodes","skinTone","selected","push","createElement","className","onClick","emoji","backgroundImageFn","native","set","sheetSize","size","skintext","propTypes","onChange","func","number","isRequired","object","string","defaultProps"],"mappings":"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","sourcesContent":["import _Object$getPrototypeOf from '../polyfills/objectGetPrototypeOf';\nimport _classCallCheck from '../polyfills/classCallCheck';\nimport _createClass from '../polyfills/createClass';\nimport _possibleConstructorReturn from '../polyfills/possibleConstructorReturn';\nimport _inherits from '../polyfills/inherits';\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nimport NimbleEmoji from './emoji/nimble-emoji';\nimport Skins from './skins';\n\nvar SkinsEmoji = function (_Skins) {\n  _inherits(SkinsEmoji, _Skins);\n\n  function SkinsEmoji(props) {\n    _classCallCheck(this, SkinsEmoji);\n\n    var _this = _possibleConstructorReturn(this, (SkinsEmoji.__proto__ || _Object$getPrototypeOf(SkinsEmoji)).call(this, props));\n\n    _this.handleClick = _this.handleClick.bind(_this);\n    return _this;\n  }\n\n  _createClass(SkinsEmoji, [{\n    key: 'render',\n    value: function render() {\n      var _props = this.props;\n      var skin = _props.skin;\n      var emojiProps = _props.emojiProps;\n      var data = _props.data;\n      var skinEmoji = _props.skinEmoji;\n      var i18n = _props.i18n;\n      var opened = this.state.opened;\n\n      var skinToneNodes = [];\n\n      for (var skinTone = 1; skinTone <= 6; skinTone++) {\n        var selected = skinTone === skin;\n        skinToneNodes.push(React.createElement(\n          'span',\n          {\n            key: 'skin-tone-' + skinTone,\n            className: 'emoji-mart-skin-swatch custom' + (selected ? ' selected' : '')\n          },\n          React.createElement(\n            'span',\n            {\n              onClick: this.handleClick,\n              'data-skin': skinTone,\n              className: 'emoji-mart-skin-tone-' + skinTone\n            },\n            NimbleEmoji({\n              emoji: skinEmoji,\n              data: data,\n              skin: skinTone,\n              backgroundImageFn: emojiProps.backgroundImageFn,\n              native: emojiProps.native,\n              set: emojiProps.set,\n              sheetSize: emojiProps.sheetSize,\n              size: 23\n            })\n          )\n        ));\n      }\n\n      return React.createElement(\n        'div',\n        {\n          className: 'emoji-mart-skin-swatches custom' + (opened ? ' opened' : '')\n        },\n        React.createElement(\n          'div',\n          { className: 'emoji-mart-skin-text' + (opened ? ' opened' : '') },\n          i18n.skintext\n        ),\n        skinToneNodes\n      );\n    }\n  }]);\n\n  return SkinsEmoji;\n}(Skins);\n\nexport default SkinsEmoji;\n\n\nSkinsEmoji.propTypes /* remove-proptypes */ = {\n  onChange: PropTypes.func,\n  skin: PropTypes.number.isRequired,\n  emojiProps: PropTypes.object.isRequired,\n  skinTone: PropTypes.number,\n  skinEmoji: PropTypes.string.isRequired,\n  i18n: PropTypes.object\n};\n\nSkinsEmoji.defaultProps = {\n  onChange: function onChange() {},\n  skinTone: null\n};"]},"metadata":{},"sourceType":"module"}