{"ast":null,"code":"import _JSON$stringify from 'babel-runtime/core-js/json/stringify';\nvar NAMESPACE = 'emoji-mart';\nvar isLocalStorageSupported = typeof window !== 'undefined' && 'localStorage' in window;\nvar getter = void 0;\nvar setter = void 0;\n\nfunction setHandlers(handlers) {\n  handlers || (handlers = {});\n  getter = handlers.getter;\n  setter = handlers.setter;\n}\n\nfunction setNamespace(namespace) {\n  NAMESPACE = namespace;\n}\n\nfunction update(state) {\n  for (var key in state) {\n    var value = state[key];\n    set(key, value);\n  }\n}\n\nfunction set(key, value) {\n  if (setter) {\n    setter(key, value);\n  } else {\n    if (!isLocalStorageSupported) return;\n\n    try {\n      window.localStorage[NAMESPACE + '.' + key] = _JSON$stringify(value);\n    } catch (e) {}\n  }\n}\n\nfunction get(key) {\n  if (getter) {\n    return getter(key);\n  } else {\n    if (!isLocalStorageSupported) return;\n\n    try {\n      var value = window.localStorage[NAMESPACE + '.' + key];\n\n      if (value) {\n        return JSON.parse(value);\n      }\n    } catch (e) {\n      return;\n    }\n  }\n}\n\nexport default {\n  update: update,\n  set: set,\n  get: get,\n  setNamespace: setNamespace,\n  setHandlers: setHandlers\n};","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/emoji-mart/dist-es/utils/store.js"],"names":["_JSON$stringify","NAMESPACE","isLocalStorageSupported","window","getter","setter","setHandlers","handlers","setNamespace","namespace","update","state","key","value","set","localStorage","e","get","JSON","parse"],"mappings":"AAAA,OAAOA,eAAP,MAA4B,sCAA5B;AACA,IAAIC,SAAS,GAAG,YAAhB;AAEA,IAAIC,uBAAuB,GAAG,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,kBAAkBA,MAAjF;AAEA,IAAIC,MAAM,GAAG,KAAK,CAAlB;AACA,IAAIC,MAAM,GAAG,KAAK,CAAlB;;AAEA,SAASC,WAAT,CAAqBC,QAArB,EAA+B;AAC7BA,EAAAA,QAAQ,KAAKA,QAAQ,GAAG,EAAhB,CAAR;AAEAH,EAAAA,MAAM,GAAGG,QAAQ,CAACH,MAAlB;AACAC,EAAAA,MAAM,GAAGE,QAAQ,CAACF,MAAlB;AACD;;AAED,SAASG,YAAT,CAAsBC,SAAtB,EAAiC;AAC/BR,EAAAA,SAAS,GAAGQ,SAAZ;AACD;;AAED,SAASC,MAAT,CAAgBC,KAAhB,EAAuB;AACrB,OAAK,IAAIC,GAAT,IAAgBD,KAAhB,EAAuB;AACrB,QAAIE,KAAK,GAAGF,KAAK,CAACC,GAAD,CAAjB;AACAE,IAAAA,GAAG,CAACF,GAAD,EAAMC,KAAN,CAAH;AACD;AACF;;AAED,SAASC,GAAT,CAAaF,GAAb,EAAkBC,KAAlB,EAAyB;AACvB,MAAIR,MAAJ,EAAY;AACVA,IAAAA,MAAM,CAACO,GAAD,EAAMC,KAAN,CAAN;AACD,GAFD,MAEO;AACL,QAAI,CAACX,uBAAL,EAA8B;;AAC9B,QAAI;AACFC,MAAAA,MAAM,CAACY,YAAP,CAAoBd,SAAS,GAAG,GAAZ,GAAkBW,GAAtC,IAA6CZ,eAAe,CAACa,KAAD,CAA5D;AACD,KAFD,CAEE,OAAOG,CAAP,EAAU,CAAE;AACf;AACF;;AAED,SAASC,GAAT,CAAaL,GAAb,EAAkB;AAChB,MAAIR,MAAJ,EAAY;AACV,WAAOA,MAAM,CAACQ,GAAD,CAAb;AACD,GAFD,MAEO;AACL,QAAI,CAACV,uBAAL,EAA8B;;AAC9B,QAAI;AACF,UAAIW,KAAK,GAAGV,MAAM,CAACY,YAAP,CAAoBd,SAAS,GAAG,GAAZ,GAAkBW,GAAtC,CAAZ;;AAEA,UAAIC,KAAJ,EAAW;AACT,eAAOK,IAAI,CAACC,KAAL,CAAWN,KAAX,CAAP;AACD;AACF,KAND,CAME,OAAOG,CAAP,EAAU;AACV;AACD;AACF;AACF;;AAED,eAAe;AAAEN,EAAAA,MAAM,EAAEA,MAAV;AAAkBI,EAAAA,GAAG,EAAEA,GAAvB;AAA4BG,EAAAA,GAAG,EAAEA,GAAjC;AAAsCT,EAAAA,YAAY,EAAEA,YAApD;AAAkEF,EAAAA,WAAW,EAAEA;AAA/E,CAAf","sourcesContent":["import _JSON$stringify from 'babel-runtime/core-js/json/stringify';\nvar NAMESPACE = 'emoji-mart';\n\nvar isLocalStorageSupported = typeof window !== 'undefined' && 'localStorage' in window;\n\nvar getter = void 0;\nvar setter = void 0;\n\nfunction setHandlers(handlers) {\n  handlers || (handlers = {});\n\n  getter = handlers.getter;\n  setter = handlers.setter;\n}\n\nfunction setNamespace(namespace) {\n  NAMESPACE = namespace;\n}\n\nfunction update(state) {\n  for (var key in state) {\n    var value = state[key];\n    set(key, value);\n  }\n}\n\nfunction set(key, value) {\n  if (setter) {\n    setter(key, value);\n  } else {\n    if (!isLocalStorageSupported) return;\n    try {\n      window.localStorage[NAMESPACE + '.' + key] = _JSON$stringify(value);\n    } catch (e) {}\n  }\n}\n\nfunction get(key) {\n  if (getter) {\n    return getter(key);\n  } else {\n    if (!isLocalStorageSupported) return;\n    try {\n      var value = window.localStorage[NAMESPACE + '.' + key];\n\n      if (value) {\n        return JSON.parse(value);\n      }\n    } catch (e) {\n      return;\n    }\n  }\n}\n\nexport default { update: update, set: set, get: get, setNamespace: setNamespace, setHandlers: setHandlers };"]},"metadata":{},"sourceType":"module"}