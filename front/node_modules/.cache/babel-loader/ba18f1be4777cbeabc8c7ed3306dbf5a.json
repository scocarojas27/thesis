{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = connect;\nObject.defineProperty(exports, \"Client\", {\n  enumerable: true,\n  get: function get() {\n    return _client.default;\n  }\n});\nObject.defineProperty(exports, \"errors\", {\n  enumerable: true,\n  get: function get() {\n    return _errors.default;\n  }\n});\nObject.defineProperty(exports, \"signing\", {\n  enumerable: true,\n  get: function get() {\n    return _signing.default;\n  }\n});\nexports.default = void 0;\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nvar _errors = _interopRequireDefault(require(\"./lib/errors\"));\n\nvar _signing = _interopRequireDefault(require(\"./lib/signing\"));\n/**\n * @module stream\n * @author Thierry Schellenbach\n * BSD License\n */\n\n\nfunction connect(apiKey, apiSecret, appId, options) {\n  /**\n   * Create StreamClient\n   * @method connect\n   * @param  {string} apiKey    API key\n   * @param  {string} [apiSecret] API secret (only use this on the server)\n   * @param  {string} [appId]     Application identifier\n   * @param  {object} [options]   Additional options\n   * @param  {string} [options.location] Datacenter location\n   * @return {StreamClient}     StreamClient\n   * @example <caption>Basic usage</caption>\n   * stream.connect(apiKey, apiSecret);\n   * @example <caption>or if you want to be able to subscribe and listen</caption>\n   * stream.connect(apiKey, apiSecret, appId);\n   * @example <caption>or on Heroku</caption>\n   * stream.connect(streamURL);\n   * @example <caption>where streamURL looks like</caption>\n   * \"https://thierry:pass@gestream.io/?app=1\"\n   */\n  if (typeof process !== 'undefined' && process.env && process.env.STREAM_URL && !apiKey) {\n    var parts = /https:\\/\\/(\\w+):(\\w+)@([\\w-]*).*\\?app_id=(\\d+)/.exec(process.env.STREAM_URL);\n    apiKey = parts[1];\n    apiSecret = parts[2];\n    var location = parts[3];\n    appId = parts[4];\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    if (location !== 'getstream' && location !== 'stream-io-api') {\n      options.location = location;\n    }\n  }\n\n  return new _client.default(apiKey, apiSecret, appId, options);\n}\n/* deprecated default export */\n\n\nvar _default = {\n  connect: connect,\n  errors: _errors.default,\n  signing: _signing.default,\n  Client: _client.default\n};\nexports.default = _default;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/getstream/lib/getstream.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","connect","enumerable","get","_client","default","_errors","_signing","apiKey","apiSecret","appId","options","process","env","STREAM_URL","parts","exec","location","undefined","_default","errors","signing","Client"],"mappings":"AAAA;;AAEA,IAAIA,sBAAsB,GAAGC,OAAO,CAAC,8CAAD,CAApC;;AAEAC,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,YAA/B,EAA6C;AAC3CC,EAAAA,KAAK,EAAE;AADoC,CAA7C;AAGAD,OAAO,CAACE,OAAR,GAAkBA,OAAlB;AACAJ,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,QAA/B,EAAyC;AACvCG,EAAAA,UAAU,EAAE,IAD2B;AAEvCC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOC,OAAO,CAACC,OAAf;AACD;AAJsC,CAAzC;AAMAR,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,QAA/B,EAAyC;AACvCG,EAAAA,UAAU,EAAE,IAD2B;AAEvCC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOG,OAAO,CAACD,OAAf;AACD;AAJsC,CAAzC;AAMAR,MAAM,CAACC,cAAP,CAAsBC,OAAtB,EAA+B,SAA/B,EAA0C;AACxCG,EAAAA,UAAU,EAAE,IAD4B;AAExCC,EAAAA,GAAG,EAAE,SAASA,GAAT,GAAe;AAClB,WAAOI,QAAQ,CAACF,OAAhB;AACD;AAJuC,CAA1C;AAMAN,OAAO,CAACM,OAAR,GAAkB,KAAK,CAAvB;;AAEA,IAAID,OAAO,GAAGT,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIU,OAAO,GAAGX,sBAAsB,CAACC,OAAO,CAAC,cAAD,CAAR,CAApC;;AAEA,IAAIW,QAAQ,GAAGZ,sBAAsB,CAACC,OAAO,CAAC,eAAD,CAAR,CAArC;AAEA;AACA;AACA;AACA;AACA;;;AACA,SAASK,OAAT,CAAiBO,MAAjB,EAAyBC,SAAzB,EAAoCC,KAApC,EAA2CC,OAA3C,EAAoD;AAClD;AACF;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACE,MAAI,OAAOC,OAAP,KAAmB,WAAnB,IAAkCA,OAAO,CAACC,GAA1C,IAAiDD,OAAO,CAACC,GAAR,CAAYC,UAA7D,IAA2E,CAACN,MAAhF,EAAwF;AACtF,QAAIO,KAAK,GAAG,iDAAiDC,IAAjD,CAAsDJ,OAAO,CAACC,GAAR,CAAYC,UAAlE,CAAZ;AACAN,IAAAA,MAAM,GAAGO,KAAK,CAAC,CAAD,CAAd;AACAN,IAAAA,SAAS,GAAGM,KAAK,CAAC,CAAD,CAAjB;AACA,QAAIE,QAAQ,GAAGF,KAAK,CAAC,CAAD,CAApB;AACAL,IAAAA,KAAK,GAAGK,KAAK,CAAC,CAAD,CAAb;;AAEA,QAAIJ,OAAO,KAAKO,SAAhB,EAA2B;AACzBP,MAAAA,OAAO,GAAG,EAAV;AACD;;AAED,QAAIM,QAAQ,KAAK,WAAb,IAA4BA,QAAQ,KAAK,eAA7C,EAA8D;AAC5DN,MAAAA,OAAO,CAACM,QAAR,GAAmBA,QAAnB;AACD;AACF;;AAED,SAAO,IAAIb,OAAO,CAACC,OAAZ,CAAoBG,MAApB,EAA4BC,SAA5B,EAAuCC,KAAvC,EAA8CC,OAA9C,CAAP;AACD;AAED;;;AACA,IAAIQ,QAAQ,GAAG;AACblB,EAAAA,OAAO,EAAEA,OADI;AAEbmB,EAAAA,MAAM,EAAEd,OAAO,CAACD,OAFH;AAGbgB,EAAAA,OAAO,EAAEd,QAAQ,CAACF,OAHL;AAIbiB,EAAAA,MAAM,EAAElB,OAAO,CAACC;AAJH,CAAf;AAMAN,OAAO,CAACM,OAAR,GAAkBc,QAAlB","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.connect = connect;\nObject.defineProperty(exports, \"Client\", {\n  enumerable: true,\n  get: function get() {\n    return _client.default;\n  }\n});\nObject.defineProperty(exports, \"errors\", {\n  enumerable: true,\n  get: function get() {\n    return _errors.default;\n  }\n});\nObject.defineProperty(exports, \"signing\", {\n  enumerable: true,\n  get: function get() {\n    return _signing.default;\n  }\n});\nexports.default = void 0;\n\nvar _client = _interopRequireDefault(require(\"./lib/client\"));\n\nvar _errors = _interopRequireDefault(require(\"./lib/errors\"));\n\nvar _signing = _interopRequireDefault(require(\"./lib/signing\"));\n\n/**\n * @module stream\n * @author Thierry Schellenbach\n * BSD License\n */\nfunction connect(apiKey, apiSecret, appId, options) {\n  /**\n   * Create StreamClient\n   * @method connect\n   * @param  {string} apiKey    API key\n   * @param  {string} [apiSecret] API secret (only use this on the server)\n   * @param  {string} [appId]     Application identifier\n   * @param  {object} [options]   Additional options\n   * @param  {string} [options.location] Datacenter location\n   * @return {StreamClient}     StreamClient\n   * @example <caption>Basic usage</caption>\n   * stream.connect(apiKey, apiSecret);\n   * @example <caption>or if you want to be able to subscribe and listen</caption>\n   * stream.connect(apiKey, apiSecret, appId);\n   * @example <caption>or on Heroku</caption>\n   * stream.connect(streamURL);\n   * @example <caption>where streamURL looks like</caption>\n   * \"https://thierry:pass@gestream.io/?app=1\"\n   */\n  if (typeof process !== 'undefined' && process.env && process.env.STREAM_URL && !apiKey) {\n    var parts = /https:\\/\\/(\\w+):(\\w+)@([\\w-]*).*\\?app_id=(\\d+)/.exec(process.env.STREAM_URL);\n    apiKey = parts[1];\n    apiSecret = parts[2];\n    var location = parts[3];\n    appId = parts[4];\n\n    if (options === undefined) {\n      options = {};\n    }\n\n    if (location !== 'getstream' && location !== 'stream-io-api') {\n      options.location = location;\n    }\n  }\n\n  return new _client.default(apiKey, apiSecret, appId, options);\n}\n\n/* deprecated default export */\nvar _default = {\n  connect: connect,\n  errors: _errors.default,\n  signing: _signing.default,\n  Client: _client.default\n};\nexports.default = _default;"]},"metadata":{},"sourceType":"script"}