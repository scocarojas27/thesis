{"ast":null,"code":"import \"core-js/modules/es6.array.sort\"; // Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\nimport clone from './lib/clone';\nimport extractHtmlAttrsFromOptions from './extractHtmlAttrsFromOptions';\nimport htmlEscape from './htmlEscape';\nimport linkToCashtag from './linkToCashtag';\nimport linkToHashtag from './linkToHashtag';\nimport linkToUrl from './linkToUrl';\nimport linkToMentionAndList from './linkToMentionAndList'; // Default CSS class for auto-linked lists (along with the url class)\n\nvar DEFAULT_LIST_CLASS = 'tweet-url list-slug'; // Default CSS class for auto-linked usernames (along with the url class)\n\nvar DEFAULT_USERNAME_CLASS = 'tweet-url username'; // Default CSS class for auto-linked hashtags (along with the url class)\n\nvar DEFAULT_HASHTAG_CLASS = 'tweet-url hashtag'; // Default CSS class for auto-linked cashtags (along with the url class)\n\nvar DEFAULT_CASHTAG_CLASS = 'tweet-url cashtag';\nexport default function (text, entities, options) {\n  var options = clone(options || {});\n  options.hashtagClass = options.hashtagClass || DEFAULT_HASHTAG_CLASS;\n  options.hashtagUrlBase = options.hashtagUrlBase || 'https://twitter.com/search?q=%23';\n  options.cashtagClass = options.cashtagClass || DEFAULT_CASHTAG_CLASS;\n  options.cashtagUrlBase = options.cashtagUrlBase || 'https://twitter.com/search?q=%24';\n  options.listClass = options.listClass || DEFAULT_LIST_CLASS;\n  options.usernameClass = options.usernameClass || DEFAULT_USERNAME_CLASS;\n  options.usernameUrlBase = options.usernameUrlBase || 'https://twitter.com/';\n  options.listUrlBase = options.listUrlBase || 'https://twitter.com/';\n  options.htmlAttrs = extractHtmlAttrsFromOptions(options);\n  options.invisibleTagAttrs = options.invisibleTagAttrs || \"style='position:absolute;left:-9999px;'\"; // remap url entities to hash\n\n  var urlEntities, i, len;\n\n  if (options.urlEntities) {\n    urlEntities = {};\n\n    for (i = 0, len = options.urlEntities.length; i < len; i++) {\n      urlEntities[options.urlEntities[i].url] = options.urlEntities[i];\n    }\n\n    options.urlEntities = urlEntities;\n  }\n\n  var result = '';\n  var beginIndex = 0; // sort entities by start index\n\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var nonEntity = options.htmlEscapeNonEntities ? htmlEscape : function (text) {\n    return text;\n  };\n\n  for (var i = 0; i < entities.length; i++) {\n    var entity = entities[i];\n    result += nonEntity(text.substring(beginIndex, entity.indices[0]));\n\n    if (entity.url) {\n      result += linkToUrl(entity, text, options);\n    } else if (entity.hashtag) {\n      result += linkToHashtag(entity, text, options);\n    } else if (entity.screenName) {\n      result += linkToMentionAndList(entity, text, options);\n    } else if (entity.cashtag) {\n      result += linkToCashtag(entity, text, options);\n    }\n\n    beginIndex = entity.indices[1];\n  }\n\n  result += nonEntity(text.substring(beginIndex, text.length));\n  return result;\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/twitter-text/dist/esm/autoLinkEntities.js"],"names":["clone","extractHtmlAttrsFromOptions","htmlEscape","linkToCashtag","linkToHashtag","linkToUrl","linkToMentionAndList","DEFAULT_LIST_CLASS","DEFAULT_USERNAME_CLASS","DEFAULT_HASHTAG_CLASS","DEFAULT_CASHTAG_CLASS","text","entities","options","hashtagClass","hashtagUrlBase","cashtagClass","cashtagUrlBase","listClass","usernameClass","usernameUrlBase","listUrlBase","htmlAttrs","invisibleTagAttrs","urlEntities","i","len","length","url","result","beginIndex","sort","a","b","indices","nonEntity","htmlEscapeNonEntities","entity","substring","hashtag","screenName","cashtag"],"mappings":"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","sourcesContent":["import \"core-js/modules/es6.array.sort\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport extractHtmlAttrsFromOptions from './extractHtmlAttrsFromOptions';\nimport htmlEscape from './htmlEscape';\nimport linkToCashtag from './linkToCashtag';\nimport linkToHashtag from './linkToHashtag';\nimport linkToUrl from './linkToUrl';\nimport linkToMentionAndList from './linkToMentionAndList'; // Default CSS class for auto-linked lists (along with the url class)\n\nvar DEFAULT_LIST_CLASS = 'tweet-url list-slug'; // Default CSS class for auto-linked usernames (along with the url class)\n\nvar DEFAULT_USERNAME_CLASS = 'tweet-url username'; // Default CSS class for auto-linked hashtags (along with the url class)\n\nvar DEFAULT_HASHTAG_CLASS = 'tweet-url hashtag'; // Default CSS class for auto-linked cashtags (along with the url class)\n\nvar DEFAULT_CASHTAG_CLASS = 'tweet-url cashtag';\nexport default function (text, entities, options) {\n  var options = clone(options || {});\n  options.hashtagClass = options.hashtagClass || DEFAULT_HASHTAG_CLASS;\n  options.hashtagUrlBase = options.hashtagUrlBase || 'https://twitter.com/search?q=%23';\n  options.cashtagClass = options.cashtagClass || DEFAULT_CASHTAG_CLASS;\n  options.cashtagUrlBase = options.cashtagUrlBase || 'https://twitter.com/search?q=%24';\n  options.listClass = options.listClass || DEFAULT_LIST_CLASS;\n  options.usernameClass = options.usernameClass || DEFAULT_USERNAME_CLASS;\n  options.usernameUrlBase = options.usernameUrlBase || 'https://twitter.com/';\n  options.listUrlBase = options.listUrlBase || 'https://twitter.com/';\n  options.htmlAttrs = extractHtmlAttrsFromOptions(options);\n  options.invisibleTagAttrs = options.invisibleTagAttrs || \"style='position:absolute;left:-9999px;'\"; // remap url entities to hash\n\n  var urlEntities, i, len;\n\n  if (options.urlEntities) {\n    urlEntities = {};\n\n    for (i = 0, len = options.urlEntities.length; i < len; i++) {\n      urlEntities[options.urlEntities[i].url] = options.urlEntities[i];\n    }\n\n    options.urlEntities = urlEntities;\n  }\n\n  var result = '';\n  var beginIndex = 0; // sort entities by start index\n\n  entities.sort(function (a, b) {\n    return a.indices[0] - b.indices[0];\n  });\n  var nonEntity = options.htmlEscapeNonEntities ? htmlEscape : function (text) {\n    return text;\n  };\n\n  for (var i = 0; i < entities.length; i++) {\n    var entity = entities[i];\n    result += nonEntity(text.substring(beginIndex, entity.indices[0]));\n\n    if (entity.url) {\n      result += linkToUrl(entity, text, options);\n    } else if (entity.hashtag) {\n      result += linkToHashtag(entity, text, options);\n    } else if (entity.screenName) {\n      result += linkToMentionAndList(entity, text, options);\n    } else if (entity.cashtag) {\n      result += linkToCashtag(entity, text, options);\n    }\n\n    beginIndex = entity.indices[1];\n  }\n\n  result += nonEntity(text.substring(beginIndex, text.length));\n  return result;\n}"]},"metadata":{},"sourceType":"module"}