{"ast":null,"code":"import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport getUnicodeTextLength from './getUnicodeTextLength';\nexport default function standardizeIndices(text, startIndex, endIndex) {\n  var totalUnicodeTextLength = getUnicodeTextLength(text);\n  var encodingDiff = text.length - totalUnicodeTextLength;\n\n  if (encodingDiff > 0) {\n    // split the string into codepoints which will map to the API's indices\n    var byCodePair = Array.from(text);\n    var beforeText = startIndex === 0 ? '' : byCodePair.slice(0, startIndex).join('');\n    var actualText = byCodePair.slice(startIndex, endIndex).join('');\n    return [beforeText.length, beforeText.length + actualText.length];\n  }\n\n  return [startIndex, endIndex];\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/twitter-text/dist/esm/standardizeIndices.js"],"names":["getUnicodeTextLength","standardizeIndices","text","startIndex","endIndex","totalUnicodeTextLength","encodingDiff","length","byCodePair","Array","from","beforeText","slice","join","actualText"],"mappings":"AAAA,OAAO,qCAAP;AACA,OAAO,gCAAP;AACA,OAAOA,oBAAP,MAAiC,wBAAjC;AACA,eAAe,SAASC,kBAAT,CAA4BC,IAA5B,EAAkCC,UAAlC,EAA8CC,QAA9C,EAAwD;AACrE,MAAIC,sBAAsB,GAAGL,oBAAoB,CAACE,IAAD,CAAjD;AACA,MAAII,YAAY,GAAGJ,IAAI,CAACK,MAAL,GAAcF,sBAAjC;;AAEA,MAAIC,YAAY,GAAG,CAAnB,EAAsB;AACpB;AACA,QAAIE,UAAU,GAAGC,KAAK,CAACC,IAAN,CAAWR,IAAX,CAAjB;AACA,QAAIS,UAAU,GAAGR,UAAU,KAAK,CAAf,GAAmB,EAAnB,GAAwBK,UAAU,CAACI,KAAX,CAAiB,CAAjB,EAAoBT,UAApB,EAAgCU,IAAhC,CAAqC,EAArC,CAAzC;AACA,QAAIC,UAAU,GAAGN,UAAU,CAACI,KAAX,CAAiBT,UAAjB,EAA6BC,QAA7B,EAAuCS,IAAvC,CAA4C,EAA5C,CAAjB;AACA,WAAO,CAACF,UAAU,CAACJ,MAAZ,EAAoBI,UAAU,CAACJ,MAAX,GAAoBO,UAAU,CAACP,MAAnD,CAAP;AACD;;AAED,SAAO,CAACJ,UAAD,EAAaC,QAAb,CAAP;AACD","sourcesContent":["import \"core-js/modules/es6.string.iterator\";\nimport \"core-js/modules/es6.array.from\";\nimport getUnicodeTextLength from './getUnicodeTextLength';\nexport default function standardizeIndices(text, startIndex, endIndex) {\n  var totalUnicodeTextLength = getUnicodeTextLength(text);\n  var encodingDiff = text.length - totalUnicodeTextLength;\n\n  if (encodingDiff > 0) {\n    // split the string into codepoints which will map to the API's indices\n    var byCodePair = Array.from(text);\n    var beforeText = startIndex === 0 ? '' : byCodePair.slice(0, startIndex).join('');\n    var actualText = byCodePair.slice(startIndex, endIndex).join('');\n    return [beforeText.length, beforeText.length + actualText.length];\n  }\n\n  return [startIndex, endIndex];\n}"]},"metadata":{},"sourceType":"module"}