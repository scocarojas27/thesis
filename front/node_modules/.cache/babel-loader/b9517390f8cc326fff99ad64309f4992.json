{"ast":null,"code":"'use strict';\n\nvar Class = require('../util/class'),\n    URI = require('../util/uri'),\n    copyObject = require('../util/copy_object'),\n    assign = require('../util/assign'),\n    Deferrable = require('../mixins/deferrable'),\n    Transport = require('./transport'),\n    XHR = require('./xhr');\n\nvar EventSource = assign(Class(Transport, {\n  initialize: function (dispatcher, endpoint) {\n    Transport.prototype.initialize.call(this, dispatcher, endpoint);\n    if (!global.EventSource) return this.setDeferredStatus('failed');\n    this._xhr = new XHR(dispatcher, endpoint);\n    endpoint = copyObject(endpoint);\n    endpoint.pathname += '/' + dispatcher.clientId;\n    var socket = new global.EventSource(URI.stringify(endpoint)),\n        self = this;\n\n    socket.onopen = function () {\n      self._everConnected = true;\n      self.setDeferredStatus('succeeded');\n    };\n\n    socket.onerror = function () {\n      if (self._everConnected) {\n        self._handleError([]);\n      } else {\n        self.setDeferredStatus('failed');\n        socket.close();\n      }\n    };\n\n    socket.onmessage = function (event) {\n      var replies;\n\n      try {\n        replies = JSON.parse(event.data);\n      } catch (error) {}\n\n      if (replies) self._receive(replies);else self._handleError([]);\n    };\n\n    this._socket = socket;\n  },\n  close: function () {\n    if (!this._socket) return;\n    this._socket.onopen = this._socket.onerror = this._socket.onmessage = null;\n\n    this._socket.close();\n\n    delete this._socket;\n  },\n  isUsable: function (callback, context) {\n    this.callback(function () {\n      callback.call(context, true);\n    });\n    this.errback(function () {\n      callback.call(context, false);\n    });\n  },\n  encode: function (messages) {\n    return this._xhr.encode(messages);\n  },\n  request: function (messages) {\n    return this._xhr.request(messages);\n  }\n}), {\n  isUsable: function (dispatcher, endpoint, callback, context) {\n    var id = dispatcher.clientId;\n    if (!id) return callback.call(context, false);\n    XHR.isUsable(dispatcher, endpoint, function (usable) {\n      if (!usable) return callback.call(context, false);\n      this.create(dispatcher, endpoint).isUsable(callback, context);\n    }, this);\n  },\n  create: function (dispatcher, endpoint) {\n    var sockets = dispatcher.transports.eventsource = dispatcher.transports.eventsource || {},\n        id = dispatcher.clientId;\n    var url = copyObject(endpoint);\n    url.pathname += '/' + (id || '');\n    url = URI.stringify(url);\n    sockets[url] = sockets[url] || new this(dispatcher, endpoint);\n    return sockets[url];\n  }\n});\nassign(EventSource.prototype, Deferrable);\nmodule.exports = EventSource;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/faye/src/transport/event_source.js"],"names":["Class","require","URI","copyObject","assign","Deferrable","Transport","XHR","EventSource","initialize","dispatcher","endpoint","prototype","call","global","setDeferredStatus","_xhr","pathname","clientId","socket","stringify","self","onopen","_everConnected","onerror","_handleError","close","onmessage","event","replies","JSON","parse","data","error","_receive","_socket","isUsable","callback","context","errback","encode","messages","request","id","usable","create","sockets","transports","eventsource","url","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAQC,OAAO,CAAC,eAAD,CAAxB;AAAA,IACIC,GAAG,GAAUD,OAAO,CAAC,aAAD,CADxB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,qBAAD,CAFxB;AAAA,IAGIG,MAAM,GAAOH,OAAO,CAAC,gBAAD,CAHxB;AAAA,IAIII,UAAU,GAAGJ,OAAO,CAAC,sBAAD,CAJxB;AAAA,IAKIK,SAAS,GAAIL,OAAO,CAAC,aAAD,CALxB;AAAA,IAMIM,GAAG,GAAUN,OAAO,CAAC,OAAD,CANxB;;AAQA,IAAIO,WAAW,GAAGJ,MAAM,CAACJ,KAAK,CAACM,SAAD,EAAY;AACxCG,EAAAA,UAAU,EAAE,UAASC,UAAT,EAAqBC,QAArB,EAA+B;AACzCL,IAAAA,SAAS,CAACM,SAAV,CAAoBH,UAApB,CAA+BI,IAA/B,CAAoC,IAApC,EAA0CH,UAA1C,EAAsDC,QAAtD;AACA,QAAI,CAACG,MAAM,CAACN,WAAZ,EAAyB,OAAO,KAAKO,iBAAL,CAAuB,QAAvB,CAAP;AAEzB,SAAKC,IAAL,GAAY,IAAIT,GAAJ,CAAQG,UAAR,EAAoBC,QAApB,CAAZ;AAEAA,IAAAA,QAAQ,GAAGR,UAAU,CAACQ,QAAD,CAArB;AACAA,IAAAA,QAAQ,CAACM,QAAT,IAAqB,MAAMP,UAAU,CAACQ,QAAtC;AAEA,QAAIC,MAAM,GAAG,IAAIL,MAAM,CAACN,WAAX,CAAuBN,GAAG,CAACkB,SAAJ,CAAcT,QAAd,CAAvB,CAAb;AAAA,QACIU,IAAI,GAAK,IADb;;AAGAF,IAAAA,MAAM,CAACG,MAAP,GAAgB,YAAW;AACzBD,MAAAA,IAAI,CAACE,cAAL,GAAsB,IAAtB;AACAF,MAAAA,IAAI,CAACN,iBAAL,CAAuB,WAAvB;AACD,KAHD;;AAKAI,IAAAA,MAAM,CAACK,OAAP,GAAiB,YAAW;AAC1B,UAAIH,IAAI,CAACE,cAAT,EAAyB;AACvBF,QAAAA,IAAI,CAACI,YAAL,CAAkB,EAAlB;AACD,OAFD,MAEO;AACLJ,QAAAA,IAAI,CAACN,iBAAL,CAAuB,QAAvB;AACAI,QAAAA,MAAM,CAACO,KAAP;AACD;AACF,KAPD;;AASAP,IAAAA,MAAM,CAACQ,SAAP,GAAmB,UAASC,KAAT,EAAgB;AACjC,UAAIC,OAAJ;;AACA,UAAI;AAAEA,QAAAA,OAAO,GAAGC,IAAI,CAACC,KAAL,CAAWH,KAAK,CAACI,IAAjB,CAAV;AAAkC,OAAxC,CAAyC,OAAOC,KAAP,EAAc,CAAE;;AAEzD,UAAIJ,OAAJ,EACER,IAAI,CAACa,QAAL,CAAcL,OAAd,EADF,KAGER,IAAI,CAACI,YAAL,CAAkB,EAAlB;AACH,KARD;;AAUA,SAAKU,OAAL,GAAehB,MAAf;AACD,GAtCuC;AAwCxCO,EAAAA,KAAK,EAAE,YAAW;AAChB,QAAI,CAAC,KAAKS,OAAV,EAAmB;AACnB,SAAKA,OAAL,CAAab,MAAb,GAAsB,KAAKa,OAAL,CAAaX,OAAb,GAAuB,KAAKW,OAAL,CAAaR,SAAb,GAAyB,IAAtE;;AACA,SAAKQ,OAAL,CAAaT,KAAb;;AACA,WAAO,KAAKS,OAAZ;AACD,GA7CuC;AA+CxCC,EAAAA,QAAQ,EAAE,UAASC,QAAT,EAAmBC,OAAnB,EAA4B;AACpC,SAAKD,QAAL,CAAc,YAAW;AAAEA,MAAAA,QAAQ,CAACxB,IAAT,CAAcyB,OAAd,EAAuB,IAAvB;AAA8B,KAAzD;AACA,SAAKC,OAAL,CAAa,YAAW;AAAEF,MAAAA,QAAQ,CAACxB,IAAT,CAAcyB,OAAd,EAAuB,KAAvB;AAA+B,KAAzD;AACD,GAlDuC;AAoDxCE,EAAAA,MAAM,EAAE,UAASC,QAAT,EAAmB;AACzB,WAAO,KAAKzB,IAAL,CAAUwB,MAAV,CAAiBC,QAAjB,CAAP;AACD,GAtDuC;AAwDxCC,EAAAA,OAAO,EAAE,UAASD,QAAT,EAAmB;AAC1B,WAAO,KAAKzB,IAAL,CAAU0B,OAAV,CAAkBD,QAAlB,CAAP;AACD;AA1DuC,CAAZ,CAAN,EA4DpB;AACFL,EAAAA,QAAQ,EAAE,UAAS1B,UAAT,EAAqBC,QAArB,EAA+B0B,QAA/B,EAAyCC,OAAzC,EAAkD;AAC1D,QAAIK,EAAE,GAAGjC,UAAU,CAACQ,QAApB;AACA,QAAI,CAACyB,EAAL,EAAS,OAAON,QAAQ,CAACxB,IAAT,CAAcyB,OAAd,EAAuB,KAAvB,CAAP;AAET/B,IAAAA,GAAG,CAAC6B,QAAJ,CAAa1B,UAAb,EAAyBC,QAAzB,EAAmC,UAASiC,MAAT,EAAiB;AAClD,UAAI,CAACA,MAAL,EAAa,OAAOP,QAAQ,CAACxB,IAAT,CAAcyB,OAAd,EAAuB,KAAvB,CAAP;AACb,WAAKO,MAAL,CAAYnC,UAAZ,EAAwBC,QAAxB,EAAkCyB,QAAlC,CAA2CC,QAA3C,EAAqDC,OAArD;AACD,KAHD,EAGG,IAHH;AAID,GATC;AAWFO,EAAAA,MAAM,EAAE,UAASnC,UAAT,EAAqBC,QAArB,EAA+B;AACrC,QAAImC,OAAO,GAAGpC,UAAU,CAACqC,UAAX,CAAsBC,WAAtB,GAAoCtC,UAAU,CAACqC,UAAX,CAAsBC,WAAtB,IAAqC,EAAvF;AAAA,QACIL,EAAE,GAAQjC,UAAU,CAACQ,QADzB;AAGA,QAAI+B,GAAG,GAAG9C,UAAU,CAACQ,QAAD,CAApB;AACAsC,IAAAA,GAAG,CAAChC,QAAJ,IAAgB,OAAO0B,EAAE,IAAI,EAAb,CAAhB;AACAM,IAAAA,GAAG,GAAG/C,GAAG,CAACkB,SAAJ,CAAc6B,GAAd,CAAN;AAEAH,IAAAA,OAAO,CAACG,GAAD,CAAP,GAAeH,OAAO,CAACG,GAAD,CAAP,IAAgB,IAAI,IAAJ,CAASvC,UAAT,EAAqBC,QAArB,CAA/B;AACA,WAAOmC,OAAO,CAACG,GAAD,CAAd;AACD;AArBC,CA5DoB,CAAxB;AAoFA7C,MAAM,CAACI,WAAW,CAACI,SAAb,EAAwBP,UAAxB,CAAN;AAEA6C,MAAM,CAACC,OAAP,GAAiB3C,WAAjB","sourcesContent":["'use strict';\n\nvar Class      = require('../util/class'),\n    URI        = require('../util/uri'),\n    copyObject = require('../util/copy_object'),\n    assign     = require('../util/assign'),\n    Deferrable = require('../mixins/deferrable'),\n    Transport  = require('./transport'),\n    XHR        = require('./xhr');\n\nvar EventSource = assign(Class(Transport, {\n  initialize: function(dispatcher, endpoint) {\n    Transport.prototype.initialize.call(this, dispatcher, endpoint);\n    if (!global.EventSource) return this.setDeferredStatus('failed');\n\n    this._xhr = new XHR(dispatcher, endpoint);\n\n    endpoint = copyObject(endpoint);\n    endpoint.pathname += '/' + dispatcher.clientId;\n\n    var socket = new global.EventSource(URI.stringify(endpoint)),\n        self   = this;\n\n    socket.onopen = function() {\n      self._everConnected = true;\n      self.setDeferredStatus('succeeded');\n    };\n\n    socket.onerror = function() {\n      if (self._everConnected) {\n        self._handleError([]);\n      } else {\n        self.setDeferredStatus('failed');\n        socket.close();\n      }\n    };\n\n    socket.onmessage = function(event) {\n      var replies;\n      try { replies = JSON.parse(event.data) } catch (error) {}\n\n      if (replies)\n        self._receive(replies);\n      else\n        self._handleError([]);\n    };\n\n    this._socket = socket;\n  },\n\n  close: function() {\n    if (!this._socket) return;\n    this._socket.onopen = this._socket.onerror = this._socket.onmessage = null;\n    this._socket.close();\n    delete this._socket;\n  },\n\n  isUsable: function(callback, context) {\n    this.callback(function() { callback.call(context, true) });\n    this.errback(function() { callback.call(context, false) });\n  },\n\n  encode: function(messages) {\n    return this._xhr.encode(messages);\n  },\n\n  request: function(messages) {\n    return this._xhr.request(messages);\n  }\n\n}), {\n  isUsable: function(dispatcher, endpoint, callback, context) {\n    var id = dispatcher.clientId;\n    if (!id) return callback.call(context, false);\n\n    XHR.isUsable(dispatcher, endpoint, function(usable) {\n      if (!usable) return callback.call(context, false);\n      this.create(dispatcher, endpoint).isUsable(callback, context);\n    }, this);\n  },\n\n  create: function(dispatcher, endpoint) {\n    var sockets = dispatcher.transports.eventsource = dispatcher.transports.eventsource || {},\n        id      = dispatcher.clientId;\n\n    var url = copyObject(endpoint);\n    url.pathname += '/' + (id || '');\n    url = URI.stringify(url);\n\n    sockets[url] = sockets[url] || new this(dispatcher, endpoint);\n    return sockets[url];\n  }\n});\n\nassign(EventSource.prototype, Deferrable);\n\nmodule.exports = EventSource;\n"]},"metadata":{},"sourceType":"script"}