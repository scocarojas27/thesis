{"ast":null,"code":"'use strict';\n\nvar Class = require('../util/class'),\n    URI = require('../util/uri'),\n    copyObject = require('../util/copy_object'),\n    assign = require('../util/assign'),\n    toJSON = require('../util/to_json'),\n    Transport = require('./transport');\n\nvar JSONP = assign(Class(Transport, {\n  encode: function (messages) {\n    var url = copyObject(this.endpoint);\n    url.query.message = toJSON(messages);\n    url.query.jsonp = '__jsonp' + JSONP._cbCount + '__';\n    return URI.stringify(url);\n  },\n  request: function (messages) {\n    var head = document.getElementsByTagName('head')[0],\n        script = document.createElement('script'),\n        callbackName = JSONP.getCallbackName(),\n        endpoint = copyObject(this.endpoint),\n        self = this;\n    endpoint.query.message = toJSON(messages);\n    endpoint.query.jsonp = callbackName;\n\n    var cleanup = function () {\n      if (!global[callbackName]) return false;\n      global[callbackName] = undefined;\n\n      try {\n        delete global[callbackName];\n      } catch (error) {}\n\n      script.parentNode.removeChild(script);\n    };\n\n    global[callbackName] = function (replies) {\n      cleanup();\n\n      self._receive(replies);\n    };\n\n    script.type = 'text/javascript';\n    script.src = URI.stringify(endpoint);\n    head.appendChild(script);\n\n    script.onerror = function () {\n      cleanup();\n\n      self._handleError(messages);\n    };\n\n    return {\n      abort: cleanup\n    };\n  }\n}), {\n  _cbCount: 0,\n  getCallbackName: function () {\n    this._cbCount += 1;\n    return '__jsonp' + this._cbCount + '__';\n  },\n  isUsable: function (dispatcher, endpoint, callback, context) {\n    callback.call(context, true);\n  }\n});\nmodule.exports = JSONP;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/faye/src/transport/jsonp.js"],"names":["Class","require","URI","copyObject","assign","toJSON","Transport","JSONP","encode","messages","url","endpoint","query","message","jsonp","_cbCount","stringify","request","head","document","getElementsByTagName","script","createElement","callbackName","getCallbackName","self","cleanup","global","undefined","error","parentNode","removeChild","replies","_receive","type","src","appendChild","onerror","_handleError","abort","isUsable","dispatcher","callback","context","call","module","exports"],"mappings":"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","sourcesContent":["'use strict';\n\nvar Class      = require('../util/class'),\n    URI        = require('../util/uri'),\n    copyObject = require('../util/copy_object'),\n    assign     = require('../util/assign'),\n    toJSON     = require('../util/to_json'),\n    Transport  = require('./transport');\n\nvar JSONP = assign(Class(Transport, {\n encode: function(messages) {\n    var url = copyObject(this.endpoint);\n    url.query.message = toJSON(messages);\n    url.query.jsonp   = '__jsonp' + JSONP._cbCount + '__';\n    return URI.stringify(url);\n  },\n\n  request: function(messages) {\n    var head         = document.getElementsByTagName('head')[0],\n        script       = document.createElement('script'),\n        callbackName = JSONP.getCallbackName(),\n        endpoint     = copyObject(this.endpoint),\n        self         = this;\n\n    endpoint.query.message = toJSON(messages);\n    endpoint.query.jsonp   = callbackName;\n\n    var cleanup = function() {\n      if (!global[callbackName]) return false;\n      global[callbackName] = undefined;\n      try { delete global[callbackName] } catch (error) {}\n      script.parentNode.removeChild(script);\n    };\n\n    global[callbackName] = function(replies) {\n      cleanup();\n      self._receive(replies);\n    };\n\n    script.type = 'text/javascript';\n    script.src  = URI.stringify(endpoint);\n    head.appendChild(script);\n\n    script.onerror = function() {\n      cleanup();\n      self._handleError(messages);\n    };\n\n    return { abort: cleanup };\n  }\n}), {\n  _cbCount: 0,\n\n  getCallbackName: function() {\n    this._cbCount += 1;\n    return '__jsonp' + this._cbCount + '__';\n  },\n\n  isUsable: function(dispatcher, endpoint, callback, context) {\n    callback.call(context, true);\n  }\n});\n\nmodule.exports = JSONP;\n"]},"metadata":{},"sourceType":"script"}