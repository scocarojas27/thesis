{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _errors = _interopRequireDefault(require(\"./errors\"));\n\nvar StreamReaction = /*#__PURE__*/function () {\n  function StreamReaction(client, token) {\n    (0, _classCallCheck2.default)(this, StreamReaction);\n    (0, _defineProperty2.default)(this, \"buildURL\", function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return \"\".concat(['reaction'].concat(args).join('/'), \"/\");\n    });\n    (0, _defineProperty2.default)(this, \"_convertTargetFeeds\", function () {\n      var targetFeeds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return targetFeeds.map(function (elem) {\n        return typeof elem === 'string' ? elem : elem.id;\n      });\n    });\n    /**\n     * Initialize a reaction object\n     * @method constructor\n     * @memberof StreamReaction.prototype\n     * @param {StreamClient} client Stream client this feed is constructed from\n     * @param {string} token JWT token\n     * @example new StreamReaction(client, \"eyJhbGciOiJIUzI1...\")\n     */\n\n    this.client = client;\n    this.token = token;\n    this.signature = token;\n  }\n\n  (0, _createClass2.default)(StreamReaction, [{\n    key: \"all\",\n    value: function all() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      /**\n       * get all reactions\n       * @method all\n       * @memberof StreamReaction.prototype\n       * @param  {object}   options  {limit:}\n       * @return {Promise} Promise object\n       * @example reactions.all()\n       * @example reactions.all({limit:100})\n       */\n\n      return this.client.get({\n        url: this.buildURL(),\n        signature: this.signature,\n        qs: options\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(kind, activity) {\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          id = _ref.id,\n          _ref$targetFeeds = _ref.targetFeeds,\n          targetFeeds = _ref$targetFeeds === void 0 ? [] : _ref$targetFeeds,\n          userId = _ref.userId,\n          targetFeedsExtraData = _ref.targetFeedsExtraData;\n      /**\n       * add reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   kind  kind of reaction\n       * @param  {string}   activity Activity or an ActivityID\n       * @param  {object}   data  data related to reaction\n       * @param  {array}    targetFeeds  an array of feeds to which to send an activity with the reaction\n       * @return {Promise} Promise object\n       * @example reactions.add(\"like\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\")\n       * @example reactions.add(\"comment\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", {\"text\": \"love it!\"},)\n       */\n\n\n      var body = {\n        id: id,\n        activity_id: activity instanceof Object ? activity.id : activity,\n        kind: kind,\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds),\n        user_id: userId\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.post({\n        url: this.buildURL(),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(kind, reaction) {\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          _ref2$targetFeeds = _ref2.targetFeeds,\n          targetFeeds = _ref2$targetFeeds === void 0 ? [] : _ref2$targetFeeds,\n          userId = _ref2.userId,\n          targetFeedsExtraData = _ref2.targetFeedsExtraData;\n      /**\n       * add reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   kind  kind of reaction\n       * @param  {string}   reaction Reaction or a ReactionID\n       * @param  {object}   data  data related to reaction\n       * @param  {array}    targetFeeds  an array of feeds to which to send an activity with the reaction\n       * @return {Promise} Promise object\n       * @example reactions.add(\"like\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\")\n       * @example reactions.add(\"comment\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", {\"text\": \"love it!\"},)\n       */\n\n\n      var body = {\n        parent: reaction instanceof Object ? reaction.id : reaction,\n        kind: kind,\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds),\n        user_id: userId\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.post({\n        url: this.buildURL(),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      /**\n       * get reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @return {Promise} Promise object\n       * @example reactions.get(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\")\n       */\n      return this.client.get({\n        url: this.buildURL(id),\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(conditions) {\n      /**\n       * retrieve reactions by activity_id, user_id or reaction_id (to paginate children reactions), pagination can be done using id_lt, id_lte, id_gt and id_gte parameters\n       * id_lt and id_lte return reactions order by creation descending starting from the reaction with the ID provided, when id_lte is used\n       * the reaction with ID equal to the value provided is included.\n       * id_gt and id_gte return reactions order by creation ascending (oldest to newest) starting from the reaction with the ID provided, when id_gte is used\n       * the reaction with ID equal to the value provided is included.\n       * results are limited to 25 at most and are ordered newest to oldest by default.\n       * @method lookup\n       * @memberof StreamReaction.prototype\n       * @param  {object}   conditions Reaction Id {activity_id|user_id|foreign_id:string, kind:string, next:string, previous:string, limit:integer}\n       * @return {Promise} Promise object\n       * @example reactions.lookup({activity_id: \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", kind:\"like\"})\n       * @example reactions.lookup({user_id: \"john\", kinds:\"like\"})\n       */\n      var userId = conditions.user_id,\n          activityId = conditions.activity_id,\n          reactionId = conditions.reaction_id,\n          qs = (0, _objectWithoutProperties2.default)(conditions, [\"user_id\", \"activity_id\", \"reaction_id\"]);\n\n      if (!qs.limit) {\n        qs.limit = 10;\n      }\n\n      if ((userId ? 1 : 0) + (activityId ? 1 : 0) + (reactionId ? 1 : 0) !== 1) {\n        throw new _errors.default.SiteError('Must provide exactly one value for one of these params: user_id, activity_id, reaction_id');\n      }\n\n      var lookupType = userId && 'user_id' || activityId && 'activity_id' || reactionId && 'reaction_id';\n      var value = userId || activityId || reactionId;\n      var url = conditions.kind ? this.buildURL(lookupType, value, conditions.kind) : this.buildURL(lookupType, value);\n      return this.client.get({\n        url: url,\n        qs: qs,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$targetFeeds = _ref3.targetFeeds,\n          targetFeeds = _ref3$targetFeeds === void 0 ? [] : _ref3$targetFeeds,\n          targetFeedsExtraData = _ref3.targetFeedsExtraData;\n      /**\n       * update reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @param  {object}   data  Data associated to reaction\n       * @param  {array}   targetFeeds  Optional feeds to post the activity to. If you sent this before and don't set it here it will be removed.\n       * @return {Promise} Promise object\n       * @example reactions.update(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", \"like\")\n       * @example reactions.update(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", \"comment\", {\"text\": \"love it!\"},)\n       */\n\n\n      var body = {\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds)\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.put({\n        url: this.buildURL(id),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      /**\n       * delete reaction\n       * @method delete\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @return {Promise} Promise object\n       * @example reactions.delete(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\")\n       */\n      return this.client.delete({\n        url: this.buildURL(id),\n        signature: this.signature\n      });\n    }\n  }]);\n  return StreamReaction;\n}();\n\nexports.default = StreamReaction;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/getstream/lib/lib/reaction.js"],"names":["_interopRequireDefault","require","Object","defineProperty","exports","value","default","_objectWithoutProperties2","_classCallCheck2","_createClass2","_defineProperty2","_errors","StreamReaction","client","token","_len","arguments","length","args","Array","_key","concat","join","targetFeeds","undefined","map","elem","id","signature","key","all","options","get","url","buildURL","qs","add","kind","activity","data","_ref","_ref$targetFeeds","userId","targetFeedsExtraData","body","activity_id","target_feeds","_convertTargetFeeds","user_id","target_feeds_extra_data","post","addChild","reaction","_ref2","_ref2$targetFeeds","parent","filter","conditions","activityId","reactionId","reaction_id","limit","SiteError","lookupType","update","_ref3","_ref3$targetFeeds","put","_delete","delete"],"mappings":"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","sourcesContent":["\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nvar _objectWithoutProperties2 = _interopRequireDefault(require(\"@babel/runtime/helpers/objectWithoutProperties\"));\n\nvar _classCallCheck2 = _interopRequireDefault(require(\"@babel/runtime/helpers/classCallCheck\"));\n\nvar _createClass2 = _interopRequireDefault(require(\"@babel/runtime/helpers/createClass\"));\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _errors = _interopRequireDefault(require(\"./errors\"));\n\nvar StreamReaction = /*#__PURE__*/function () {\n  function StreamReaction(client, token) {\n    (0, _classCallCheck2.default)(this, StreamReaction);\n    (0, _defineProperty2.default)(this, \"buildURL\", function () {\n      for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n        args[_key] = arguments[_key];\n      }\n\n      return \"\".concat(['reaction'].concat(args).join('/'), \"/\");\n    });\n    (0, _defineProperty2.default)(this, \"_convertTargetFeeds\", function () {\n      var targetFeeds = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n      return targetFeeds.map(function (elem) {\n        return typeof elem === 'string' ? elem : elem.id;\n      });\n    });\n\n    /**\n     * Initialize a reaction object\n     * @method constructor\n     * @memberof StreamReaction.prototype\n     * @param {StreamClient} client Stream client this feed is constructed from\n     * @param {string} token JWT token\n     * @example new StreamReaction(client, \"eyJhbGciOiJIUzI1...\")\n     */\n    this.client = client;\n    this.token = token;\n    this.signature = token;\n  }\n\n  (0, _createClass2.default)(StreamReaction, [{\n    key: \"all\",\n    value: function all() {\n      var options = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n\n      /**\n       * get all reactions\n       * @method all\n       * @memberof StreamReaction.prototype\n       * @param  {object}   options  {limit:}\n       * @return {Promise} Promise object\n       * @example reactions.all()\n       * @example reactions.all({limit:100})\n       */\n      return this.client.get({\n        url: this.buildURL(),\n        signature: this.signature,\n        qs: options\n      });\n    }\n  }, {\n    key: \"add\",\n    value: function add(kind, activity) {\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _ref = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          id = _ref.id,\n          _ref$targetFeeds = _ref.targetFeeds,\n          targetFeeds = _ref$targetFeeds === void 0 ? [] : _ref$targetFeeds,\n          userId = _ref.userId,\n          targetFeedsExtraData = _ref.targetFeedsExtraData;\n\n      /**\n       * add reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   kind  kind of reaction\n       * @param  {string}   activity Activity or an ActivityID\n       * @param  {object}   data  data related to reaction\n       * @param  {array}    targetFeeds  an array of feeds to which to send an activity with the reaction\n       * @return {Promise} Promise object\n       * @example reactions.add(\"like\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\")\n       * @example reactions.add(\"comment\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", {\"text\": \"love it!\"},)\n       */\n      var body = {\n        id: id,\n        activity_id: activity instanceof Object ? activity.id : activity,\n        kind: kind,\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds),\n        user_id: userId\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.post({\n        url: this.buildURL(),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"addChild\",\n    value: function addChild(kind, reaction) {\n      var data = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};\n\n      var _ref2 = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {},\n          _ref2$targetFeeds = _ref2.targetFeeds,\n          targetFeeds = _ref2$targetFeeds === void 0 ? [] : _ref2$targetFeeds,\n          userId = _ref2.userId,\n          targetFeedsExtraData = _ref2.targetFeedsExtraData;\n\n      /**\n       * add reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   kind  kind of reaction\n       * @param  {string}   reaction Reaction or a ReactionID\n       * @param  {object}   data  data related to reaction\n       * @param  {array}    targetFeeds  an array of feeds to which to send an activity with the reaction\n       * @return {Promise} Promise object\n       * @example reactions.add(\"like\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\")\n       * @example reactions.add(\"comment\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", {\"text\": \"love it!\"},)\n       */\n      var body = {\n        parent: reaction instanceof Object ? reaction.id : reaction,\n        kind: kind,\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds),\n        user_id: userId\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.post({\n        url: this.buildURL(),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"get\",\n    value: function get(id) {\n      /**\n       * get reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @return {Promise} Promise object\n       * @example reactions.get(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\")\n       */\n      return this.client.get({\n        url: this.buildURL(id),\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"filter\",\n    value: function filter(conditions) {\n      /**\n       * retrieve reactions by activity_id, user_id or reaction_id (to paginate children reactions), pagination can be done using id_lt, id_lte, id_gt and id_gte parameters\n       * id_lt and id_lte return reactions order by creation descending starting from the reaction with the ID provided, when id_lte is used\n       * the reaction with ID equal to the value provided is included.\n       * id_gt and id_gte return reactions order by creation ascending (oldest to newest) starting from the reaction with the ID provided, when id_gte is used\n       * the reaction with ID equal to the value provided is included.\n       * results are limited to 25 at most and are ordered newest to oldest by default.\n       * @method lookup\n       * @memberof StreamReaction.prototype\n       * @param  {object}   conditions Reaction Id {activity_id|user_id|foreign_id:string, kind:string, next:string, previous:string, limit:integer}\n       * @return {Promise} Promise object\n       * @example reactions.lookup({activity_id: \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", kind:\"like\"})\n       * @example reactions.lookup({user_id: \"john\", kinds:\"like\"})\n       */\n      var userId = conditions.user_id,\n          activityId = conditions.activity_id,\n          reactionId = conditions.reaction_id,\n          qs = (0, _objectWithoutProperties2.default)(conditions, [\"user_id\", \"activity_id\", \"reaction_id\"]);\n\n      if (!qs.limit) {\n        qs.limit = 10;\n      }\n\n      if ((userId ? 1 : 0) + (activityId ? 1 : 0) + (reactionId ? 1 : 0) !== 1) {\n        throw new _errors.default.SiteError('Must provide exactly one value for one of these params: user_id, activity_id, reaction_id');\n      }\n\n      var lookupType = userId && 'user_id' || activityId && 'activity_id' || reactionId && 'reaction_id';\n      var value = userId || activityId || reactionId;\n      var url = conditions.kind ? this.buildURL(lookupType, value, conditions.kind) : this.buildURL(lookupType, value);\n      return this.client.get({\n        url: url,\n        qs: qs,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"update\",\n    value: function update(id, data) {\n      var _ref3 = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n          _ref3$targetFeeds = _ref3.targetFeeds,\n          targetFeeds = _ref3$targetFeeds === void 0 ? [] : _ref3$targetFeeds,\n          targetFeedsExtraData = _ref3.targetFeedsExtraData;\n\n      /**\n       * update reaction\n       * @method add\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @param  {object}   data  Data associated to reaction\n       * @param  {array}   targetFeeds  Optional feeds to post the activity to. If you sent this before and don't set it here it will be removed.\n       * @return {Promise} Promise object\n       * @example reactions.update(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", \"like\")\n       * @example reactions.update(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\", \"0c7db91c-67f9-11e8-bcd9-fe00a9219401\", \"comment\", {\"text\": \"love it!\"},)\n       */\n      var body = {\n        data: data,\n        target_feeds: this._convertTargetFeeds(targetFeeds)\n      };\n\n      if (targetFeedsExtraData != null) {\n        body.target_feeds_extra_data = targetFeedsExtraData;\n      }\n\n      return this.client.put({\n        url: this.buildURL(id),\n        body: body,\n        signature: this.signature\n      });\n    }\n  }, {\n    key: \"delete\",\n    value: function _delete(id) {\n      /**\n       * delete reaction\n       * @method delete\n       * @memberof StreamReaction.prototype\n       * @param  {string}   id Reaction Id\n       * @return {Promise} Promise object\n       * @example reactions.delete(\"67b3e3b5-b201-4697-96ac-482eb14f88ec\")\n       */\n      return this.client.delete({\n        url: this.buildURL(id),\n        signature: this.signature\n      });\n    }\n  }]);\n  return StreamReaction;\n}();\n\nexports.default = StreamReaction;"]},"metadata":{},"sourceType":"script"}