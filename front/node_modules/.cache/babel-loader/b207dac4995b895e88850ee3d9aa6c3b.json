{"ast":null,"code":"import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\"; // Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\nimport atSigns from './regexp/atSigns';\nimport endMentionMatch from './regexp/endMentionMatch';\nimport validMentionOrList from './regexp/validMentionOrList';\nexport default function (text) {\n  if (!text || !text.match(atSigns)) {\n    return [];\n  }\n\n  var possibleNames = [];\n  text.replace(validMentionOrList, function (match, before, atSign, screenName, slashListname, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n\n    if (!after.match(endMentionMatch)) {\n      slashListname = slashListname || '';\n      var startPosition = offset + before.length;\n      var endPosition = startPosition + screenName.length + slashListname.length + 1;\n      possibleNames.push({\n        screenName: screenName,\n        listSlug: slashListname,\n        indices: [startPosition, endPosition]\n      });\n    }\n  });\n  return possibleNames;\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/twitter-text/dist/esm/extractMentionsOrListsWithIndices.js"],"names":["atSigns","endMentionMatch","validMentionOrList","text","match","possibleNames","replace","before","atSign","screenName","slashListname","offset","chunk","after","slice","length","startPosition","endPosition","push","listSlug","indices"],"mappings":"AAAA,OAAO,oCAAP;AACA,OAAO,kCAAP,C,CACA;AACA;AACA;;AACA,OAAOA,OAAP,MAAoB,kBAApB;AACA,OAAOC,eAAP,MAA4B,0BAA5B;AACA,OAAOC,kBAAP,MAA+B,6BAA/B;AACA,eAAe,UAAUC,IAAV,EAAgB;AAC7B,MAAI,CAACA,IAAD,IAAS,CAACA,IAAI,CAACC,KAAL,CAAWJ,OAAX,CAAd,EAAmC;AACjC,WAAO,EAAP;AACD;;AAED,MAAIK,aAAa,GAAG,EAApB;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAaJ,kBAAb,EAAiC,UAAUE,KAAV,EAAiBG,MAAjB,EAAyBC,MAAzB,EAAiCC,UAAjC,EAA6CC,aAA7C,EAA4DC,MAA5D,EAAoEC,KAApE,EAA2E;AAC1G,QAAIC,KAAK,GAAGD,KAAK,CAACE,KAAN,CAAYH,MAAM,GAAGP,KAAK,CAACW,MAA3B,CAAZ;;AAEA,QAAI,CAACF,KAAK,CAACT,KAAN,CAAYH,eAAZ,CAAL,EAAmC;AACjCS,MAAAA,aAAa,GAAGA,aAAa,IAAI,EAAjC;AACA,UAAIM,aAAa,GAAGL,MAAM,GAAGJ,MAAM,CAACQ,MAApC;AACA,UAAIE,WAAW,GAAGD,aAAa,GAAGP,UAAU,CAACM,MAA3B,GAAoCL,aAAa,CAACK,MAAlD,GAA2D,CAA7E;AACAV,MAAAA,aAAa,CAACa,IAAd,CAAmB;AACjBT,QAAAA,UAAU,EAAEA,UADK;AAEjBU,QAAAA,QAAQ,EAAET,aAFO;AAGjBU,QAAAA,OAAO,EAAE,CAACJ,aAAD,EAAgBC,WAAhB;AAHQ,OAAnB;AAKD;AACF,GAbD;AAcA,SAAOZ,aAAP;AACD","sourcesContent":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.regexp.match\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport atSigns from './regexp/atSigns';\nimport endMentionMatch from './regexp/endMentionMatch';\nimport validMentionOrList from './regexp/validMentionOrList';\nexport default function (text) {\n  if (!text || !text.match(atSigns)) {\n    return [];\n  }\n\n  var possibleNames = [];\n  text.replace(validMentionOrList, function (match, before, atSign, screenName, slashListname, offset, chunk) {\n    var after = chunk.slice(offset + match.length);\n\n    if (!after.match(endMentionMatch)) {\n      slashListname = slashListname || '';\n      var startPosition = offset + before.length;\n      var endPosition = startPosition + screenName.length + slashListname.length + 1;\n      possibleNames.push({\n        screenName: screenName,\n        listSlug: slashListname,\n        indices: [startPosition, endPosition]\n      });\n    }\n  });\n  return possibleNames;\n}"]},"metadata":{},"sourceType":"module"}