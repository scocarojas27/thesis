{"ast":null,"code":"// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nexport default function (entity, text, options) {\n  var cashtag = htmlEscape(entity.cashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.cashtagUrlBase + cashtag;\n  attrs.title = \"$\".concat(cashtag);\n  attrs['class'] = options.cashtagClass;\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, '$', cashtag, attrs, options);\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/front/node_modules/twitter-text/dist/esm/linkToCashtag.js"],"names":["clone","htmlEscape","linkToTextWithSymbol","entity","text","options","cashtag","attrs","htmlAttrs","href","cashtagUrlBase","title","concat","cashtagClass","targetBlank","target"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,KAAP,MAAkB,aAAlB;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,oBAAP,MAAiC,wBAAjC;AACA,eAAe,UAAUC,MAAV,EAAkBC,IAAlB,EAAwBC,OAAxB,EAAiC;AAC9C,MAAIC,OAAO,GAAGL,UAAU,CAACE,MAAM,CAACG,OAAR,CAAxB;AACA,MAAIC,KAAK,GAAGP,KAAK,CAACK,OAAO,CAACG,SAAR,IAAqB,EAAtB,CAAjB;AACAD,EAAAA,KAAK,CAACE,IAAN,GAAaJ,OAAO,CAACK,cAAR,GAAyBJ,OAAtC;AACAC,EAAAA,KAAK,CAACI,KAAN,GAAc,IAAIC,MAAJ,CAAWN,OAAX,CAAd;AACAC,EAAAA,KAAK,CAAC,OAAD,CAAL,GAAiBF,OAAO,CAACQ,YAAzB;;AAEA,MAAIR,OAAO,CAACS,WAAZ,EAAyB;AACvBP,IAAAA,KAAK,CAACQ,MAAN,GAAe,QAAf;AACD;;AAED,SAAOb,oBAAoB,CAACC,MAAD,EAAS,GAAT,EAAcG,OAAd,EAAuBC,KAAvB,EAA8BF,OAA9B,CAA3B;AACD","sourcesContent":["// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport clone from './lib/clone';\nimport htmlEscape from './htmlEscape';\nimport linkToTextWithSymbol from './linkToTextWithSymbol';\nexport default function (entity, text, options) {\n  var cashtag = htmlEscape(entity.cashtag);\n  var attrs = clone(options.htmlAttrs || {});\n  attrs.href = options.cashtagUrlBase + cashtag;\n  attrs.title = \"$\".concat(cashtag);\n  attrs['class'] = options.cashtagClass;\n\n  if (options.targetBlank) {\n    attrs.target = '_blank';\n  }\n\n  return linkToTextWithSymbol(entity, '$', cashtag, attrs, options);\n}"]},"metadata":{},"sourceType":"module"}