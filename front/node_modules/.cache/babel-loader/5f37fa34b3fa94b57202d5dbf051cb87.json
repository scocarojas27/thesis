{"ast":null,"code":"import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\"; // Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\n\nimport validCashtag from './regexp/validCashtag';\nexport default function (text) {\n  if (!text || text.indexOf('$') === -1) {\n    return [];\n  }\n\n  var tags = [];\n  text.replace(validCashtag, function (match, before, dollar, cashtag, offset, chunk) {\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + cashtag.length + 1;\n    tags.push({\n      cashtag: cashtag,\n      indices: [startPosition, endPosition]\n    });\n  });\n  return tags;\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/twitter-text/dist/esm/extractCashtagsWithIndices.js"],"names":["validCashtag","text","indexOf","tags","replace","match","before","dollar","cashtag","offset","chunk","startPosition","length","endPosition","push","indices"],"mappings":"AAAA,OAAO,oCAAP;AACA,OAAO,oCAAP,C,CACA;AACA;AACA;;AACA,OAAOA,YAAP,MAAyB,uBAAzB;AACA,eAAe,UAAUC,IAAV,EAAgB;AAC7B,MAAI,CAACA,IAAD,IAASA,IAAI,CAACC,OAAL,CAAa,GAAb,MAAsB,CAAC,CAApC,EAAuC;AACrC,WAAO,EAAP;AACD;;AAED,MAAIC,IAAI,GAAG,EAAX;AACAF,EAAAA,IAAI,CAACG,OAAL,CAAaJ,YAAb,EAA2B,UAAUK,KAAV,EAAiBC,MAAjB,EAAyBC,MAAzB,EAAiCC,OAAjC,EAA0CC,MAA1C,EAAkDC,KAAlD,EAAyD;AAClF,QAAIC,aAAa,GAAGF,MAAM,GAAGH,MAAM,CAACM,MAApC;AACA,QAAIC,WAAW,GAAGF,aAAa,GAAGH,OAAO,CAACI,MAAxB,GAAiC,CAAnD;AACAT,IAAAA,IAAI,CAACW,IAAL,CAAU;AACRN,MAAAA,OAAO,EAAEA,OADD;AAERO,MAAAA,OAAO,EAAE,CAACJ,aAAD,EAAgBE,WAAhB;AAFD,KAAV;AAID,GAPD;AAQA,SAAOV,IAAP;AACD","sourcesContent":["import \"core-js/modules/es6.regexp.replace\";\nimport \"core-js/modules/es6.array.index-of\";\n// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport validCashtag from './regexp/validCashtag';\nexport default function (text) {\n  if (!text || text.indexOf('$') === -1) {\n    return [];\n  }\n\n  var tags = [];\n  text.replace(validCashtag, function (match, before, dollar, cashtag, offset, chunk) {\n    var startPosition = offset + before.length;\n    var endPosition = startPosition + cashtag.length + 1;\n    tags.push({\n      cashtag: cashtag,\n      indices: [startPosition, endPosition]\n    });\n  });\n  return tags;\n}"]},"metadata":{},"sourceType":"module"}