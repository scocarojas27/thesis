{"ast":null,"code":"var _String = String;\nexport default _String.fromCodePoint || function stringFromCodePoint() {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n\n  if (!length) {\n    return '';\n  }\n\n  var result = '';\n\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n\n    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 || // not a valid Unicode code point\n    codePoint > 0x10ffff || // not a valid Unicode code point\n    Math.floor(codePoint) != codePoint // not an integer\n    ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n\n    if (codePoint <= 0xffff) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xd800;\n      lowSurrogate = codePoint % 0x400 + 0xdc00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n\n  return result;\n};","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/emoji-mart/dist-es/polyfills/stringFromCodePoint.js"],"names":["_String","String","fromCodePoint","stringFromCodePoint","MAX_SIZE","codeUnits","highSurrogate","lowSurrogate","index","length","arguments","result","codePoint","Number","isFinite","Math","floor","RangeError","push","fromCharCode","apply"],"mappings":"AAAA,IAAIA,OAAO,GAAGC,MAAd;AAEA,eAAeD,OAAO,CAACE,aAAR,IAAyB,SAASC,mBAAT,GAA+B;AACrE,MAAIC,QAAQ,GAAG,MAAf;AACA,MAAIC,SAAS,GAAG,EAAhB;AACA,MAAIC,aAAJ;AACA,MAAIC,YAAJ;AACA,MAAIC,KAAK,GAAG,CAAC,CAAb;AACA,MAAIC,MAAM,GAAGC,SAAS,CAACD,MAAvB;;AACA,MAAI,CAACA,MAAL,EAAa;AACX,WAAO,EAAP;AACD;;AACD,MAAIE,MAAM,GAAG,EAAb;;AACA,SAAO,EAAEH,KAAF,GAAUC,MAAjB,EAAyB;AACvB,QAAIG,SAAS,GAAGC,MAAM,CAACH,SAAS,CAACF,KAAD,CAAV,CAAtB;;AACA,QAAI,CAACM,QAAQ,CAACF,SAAD,CAAT,IAAwB;AAC5BA,IAAAA,SAAS,GAAG,CADR,IACa;AACjBA,IAAAA,SAAS,GAAG,QAFR,IAEoB;AACxBG,IAAAA,IAAI,CAACC,KAAL,CAAWJ,SAAX,KAAyBA,SAHzB,CAGmC;AAHnC,MAIE;AACE,cAAMK,UAAU,CAAC,yBAAyBL,SAA1B,CAAhB;AACD;;AACH,QAAIA,SAAS,IAAI,MAAjB,EAAyB;AACvB;AACAP,MAAAA,SAAS,CAACa,IAAV,CAAeN,SAAf;AACD,KAHD,MAGO;AACL;AACA;AACAA,MAAAA,SAAS,IAAI,OAAb;AACAN,MAAAA,aAAa,GAAG,CAACM,SAAS,IAAI,EAAd,IAAoB,MAApC;AACAL,MAAAA,YAAY,GAAGK,SAAS,GAAG,KAAZ,GAAoB,MAAnC;AACAP,MAAAA,SAAS,CAACa,IAAV,CAAeZ,aAAf,EAA8BC,YAA9B;AACD;;AACD,QAAIC,KAAK,GAAG,CAAR,KAAcC,MAAd,IAAwBJ,SAAS,CAACI,MAAV,GAAmBL,QAA/C,EAAyD;AACvDO,MAAAA,MAAM,IAAIV,MAAM,CAACkB,YAAP,CAAoBC,KAApB,CAA0B,IAA1B,EAAgCf,SAAhC,CAAV;AACAA,MAAAA,SAAS,CAACI,MAAV,GAAmB,CAAnB;AACD;AACF;;AACD,SAAOE,MAAP;AACD,CArCD","sourcesContent":["var _String = String;\n\nexport default _String.fromCodePoint || function stringFromCodePoint() {\n  var MAX_SIZE = 0x4000;\n  var codeUnits = [];\n  var highSurrogate;\n  var lowSurrogate;\n  var index = -1;\n  var length = arguments.length;\n  if (!length) {\n    return '';\n  }\n  var result = '';\n  while (++index < length) {\n    var codePoint = Number(arguments[index]);\n    if (!isFinite(codePoint) || // `NaN`, `+Infinity`, or `-Infinity`\n    codePoint < 0 || // not a valid Unicode code point\n    codePoint > 0x10ffff || // not a valid Unicode code point\n    Math.floor(codePoint) != codePoint // not an integer\n    ) {\n        throw RangeError('Invalid code point: ' + codePoint);\n      }\n    if (codePoint <= 0xffff) {\n      // BMP code point\n      codeUnits.push(codePoint);\n    } else {\n      // Astral code point; split in surrogate halves\n      // http://mathiasbynens.be/notes/javascript-encoding#surrogate-formulae\n      codePoint -= 0x10000;\n      highSurrogate = (codePoint >> 10) + 0xd800;\n      lowSurrogate = codePoint % 0x400 + 0xdc00;\n      codeUnits.push(highSurrogate, lowSurrogate);\n    }\n    if (index + 1 === length || codeUnits.length > MAX_SIZE) {\n      result += String.fromCharCode.apply(null, codeUnits);\n      codeUnits.length = 0;\n    }\n  }\n  return result;\n};"]},"metadata":{},"sourceType":"module"}