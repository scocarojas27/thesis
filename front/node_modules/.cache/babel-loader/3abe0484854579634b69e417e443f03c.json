{"ast":null,"code":"'use strict';\n\nvar Class = require('../util/class'),\n    Grammar = require('./grammar');\n\nvar Error = Class({\n  initialize: function (code, params, message) {\n    this.code = code;\n    this.params = Array.prototype.slice.call(params);\n    this.message = message;\n  },\n  toString: function () {\n    return this.code + ':' + this.params.join(',') + ':' + this.message;\n  }\n});\n\nError.parse = function (message) {\n  message = message || '';\n  if (!Grammar.ERROR.test(message)) return new Error(null, [], message);\n  var parts = message.split(':'),\n      code = parseInt(parts[0]),\n      params = parts[1].split(','),\n      message = parts[2];\n  return new Error(code, params, message);\n}; // http://code.google.com/p/cometd/wiki/BayeuxCodes\n\n\nvar errors = {\n  versionMismatch: [300, 'Version mismatch'],\n  conntypeMismatch: [301, 'Connection types not supported'],\n  extMismatch: [302, 'Extension mismatch'],\n  badRequest: [400, 'Bad request'],\n  clientUnknown: [401, 'Unknown client'],\n  parameterMissing: [402, 'Missing required parameter'],\n  channelForbidden: [403, 'Forbidden channel'],\n  channelUnknown: [404, 'Unknown channel'],\n  channelInvalid: [405, 'Invalid channel'],\n  extUnknown: [406, 'Unknown extension'],\n  publishFailed: [407, 'Failed to publish'],\n  serverError: [500, 'Internal server error']\n};\n\nfor (var name in errors) (function (name) {\n  Error[name] = function () {\n    return new Error(errors[name][0], arguments, errors[name][1]).toString();\n  };\n})(name);\n\nmodule.exports = Error;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/node_modules/faye/src/protocol/error.js"],"names":["Class","require","Grammar","Error","initialize","code","params","message","Array","prototype","slice","call","toString","join","parse","ERROR","test","parts","split","parseInt","errors","versionMismatch","conntypeMismatch","extMismatch","badRequest","clientUnknown","parameterMissing","channelForbidden","channelUnknown","channelInvalid","extUnknown","publishFailed","serverError","name","arguments","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAKC,OAAO,CAAC,eAAD,CAArB;AAAA,IACIC,OAAO,GAAGD,OAAO,CAAC,WAAD,CADrB;;AAGA,IAAIE,KAAK,GAAGH,KAAK,CAAC;AAChBI,EAAAA,UAAU,EAAE,UAASC,IAAT,EAAeC,MAAf,EAAuBC,OAAvB,EAAgC;AAC1C,SAAKF,IAAL,GAAeA,IAAf;AACA,SAAKC,MAAL,GAAeE,KAAK,CAACC,SAAN,CAAgBC,KAAhB,CAAsBC,IAAtB,CAA2BL,MAA3B,CAAf;AACA,SAAKC,OAAL,GAAeA,OAAf;AACD,GALe;AAOhBK,EAAAA,QAAQ,EAAE,YAAW;AACnB,WAAO,KAAKP,IAAL,GAAY,GAAZ,GACA,KAAKC,MAAL,CAAYO,IAAZ,CAAiB,GAAjB,CADA,GACwB,GADxB,GAEA,KAAKN,OAFZ;AAGD;AAXe,CAAD,CAAjB;;AAcAJ,KAAK,CAACW,KAAN,GAAc,UAASP,OAAT,EAAkB;AAC9BA,EAAAA,OAAO,GAAGA,OAAO,IAAI,EAArB;AACA,MAAI,CAACL,OAAO,CAACa,KAAR,CAAcC,IAAd,CAAmBT,OAAnB,CAAL,EAAkC,OAAO,IAAIJ,KAAJ,CAAU,IAAV,EAAgB,EAAhB,EAAoBI,OAApB,CAAP;AAElC,MAAIU,KAAK,GAAKV,OAAO,CAACW,KAAR,CAAc,GAAd,CAAd;AAAA,MACIb,IAAI,GAAMc,QAAQ,CAACF,KAAK,CAAC,CAAD,CAAN,CADtB;AAAA,MAEIX,MAAM,GAAIW,KAAK,CAAC,CAAD,CAAL,CAASC,KAAT,CAAe,GAAf,CAFd;AAAA,MAGIX,OAAO,GAAGU,KAAK,CAAC,CAAD,CAHnB;AAKA,SAAO,IAAId,KAAJ,CAAUE,IAAV,EAAgBC,MAAhB,EAAwBC,OAAxB,CAAP;AACD,CAVD,C,CAYA;;;AACA,IAAIa,MAAM,GAAG;AACXC,EAAAA,eAAe,EAAG,CAAC,GAAD,EAAM,kBAAN,CADP;AAEXC,EAAAA,gBAAgB,EAAE,CAAC,GAAD,EAAM,gCAAN,CAFP;AAGXC,EAAAA,WAAW,EAAO,CAAC,GAAD,EAAM,oBAAN,CAHP;AAIXC,EAAAA,UAAU,EAAQ,CAAC,GAAD,EAAM,aAAN,CAJP;AAKXC,EAAAA,aAAa,EAAK,CAAC,GAAD,EAAM,gBAAN,CALP;AAMXC,EAAAA,gBAAgB,EAAE,CAAC,GAAD,EAAM,4BAAN,CANP;AAOXC,EAAAA,gBAAgB,EAAE,CAAC,GAAD,EAAM,mBAAN,CAPP;AAQXC,EAAAA,cAAc,EAAI,CAAC,GAAD,EAAM,iBAAN,CARP;AASXC,EAAAA,cAAc,EAAI,CAAC,GAAD,EAAM,iBAAN,CATP;AAUXC,EAAAA,UAAU,EAAQ,CAAC,GAAD,EAAM,mBAAN,CAVP;AAWXC,EAAAA,aAAa,EAAK,CAAC,GAAD,EAAM,mBAAN,CAXP;AAYXC,EAAAA,WAAW,EAAO,CAAC,GAAD,EAAM,uBAAN;AAZP,CAAb;;AAeA,KAAK,IAAIC,IAAT,IAAiBb,MAAjB,EACE,CAAC,UAASa,IAAT,EAAe;AACd9B,EAAAA,KAAK,CAAC8B,IAAD,CAAL,GAAc,YAAW;AACvB,WAAO,IAAI9B,KAAJ,CAAUiB,MAAM,CAACa,IAAD,CAAN,CAAa,CAAb,CAAV,EAA2BC,SAA3B,EAAsCd,MAAM,CAACa,IAAD,CAAN,CAAa,CAAb,CAAtC,EAAuDrB,QAAvD,EAAP;AACD,GAFD;AAGD,CAJD,EAIGqB,IAJH;;AAMFE,MAAM,CAACC,OAAP,GAAiBjC,KAAjB","sourcesContent":["'use strict';\n\nvar Class   = require('../util/class'),\n    Grammar = require('./grammar');\n\nvar Error = Class({\n  initialize: function(code, params, message) {\n    this.code    = code;\n    this.params  = Array.prototype.slice.call(params);\n    this.message = message;\n  },\n\n  toString: function() {\n    return this.code + ':' +\n           this.params.join(',') + ':' +\n           this.message;\n  }\n});\n\nError.parse = function(message) {\n  message = message || '';\n  if (!Grammar.ERROR.test(message)) return new Error(null, [], message);\n\n  var parts   = message.split(':'),\n      code    = parseInt(parts[0]),\n      params  = parts[1].split(','),\n      message = parts[2];\n\n  return new Error(code, params, message);\n};\n\n// http://code.google.com/p/cometd/wiki/BayeuxCodes\nvar errors = {\n  versionMismatch:  [300, 'Version mismatch'],\n  conntypeMismatch: [301, 'Connection types not supported'],\n  extMismatch:      [302, 'Extension mismatch'],\n  badRequest:       [400, 'Bad request'],\n  clientUnknown:    [401, 'Unknown client'],\n  parameterMissing: [402, 'Missing required parameter'],\n  channelForbidden: [403, 'Forbidden channel'],\n  channelUnknown:   [404, 'Unknown channel'],\n  channelInvalid:   [405, 'Invalid channel'],\n  extUnknown:       [406, 'Unknown extension'],\n  publishFailed:    [407, 'Failed to publish'],\n  serverError:      [500, 'Internal server error']\n};\n\nfor (var name in errors)\n  (function(name) {\n    Error[name] = function() {\n      return new Error(errors[name][0], arguments, errors[name][1]).toString();\n    };\n  })(name);\n\nmodule.exports = Error;\n"]},"metadata":{},"sourceType":"script"}