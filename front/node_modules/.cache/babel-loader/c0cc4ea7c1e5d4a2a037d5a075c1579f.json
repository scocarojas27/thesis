{"ast":null,"code":"'use strict';\n\nvar Class = require('../util/class'),\n    assign = require('../util/assign'),\n    Deferrable = require('../mixins/deferrable');\n\nvar Subscription = Class({\n  initialize: function (client, channels, callback, context) {\n    this._client = client;\n    this._channels = channels;\n    this._callback = callback;\n    this._context = context;\n    this._cancelled = false;\n  },\n  withChannel: function (callback, context) {\n    this._withChannel = [callback, context];\n    return this;\n  },\n  apply: function (context, args) {\n    var message = args[0];\n    if (this._callback) this._callback.call(this._context, message.data);\n    if (this._withChannel) this._withChannel[0].call(this._withChannel[1], message.channel, message.data);\n  },\n  cancel: function () {\n    if (this._cancelled) return;\n\n    this._client.unsubscribe(this._channels, this);\n\n    this._cancelled = true;\n  },\n  unsubscribe: function () {\n    this.cancel();\n  }\n});\nassign(Subscription.prototype, Deferrable);\nmodule.exports = Subscription;","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/front/node_modules/faye/src/protocol/subscription.js"],"names":["Class","require","assign","Deferrable","Subscription","initialize","client","channels","callback","context","_client","_channels","_callback","_context","_cancelled","withChannel","_withChannel","apply","args","message","call","data","channel","cancel","unsubscribe","prototype","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,KAAK,GAAQC,OAAO,CAAC,eAAD,CAAxB;AAAA,IACIC,MAAM,GAAOD,OAAO,CAAC,gBAAD,CADxB;AAAA,IAEIE,UAAU,GAAGF,OAAO,CAAC,sBAAD,CAFxB;;AAIA,IAAIG,YAAY,GAAGJ,KAAK,CAAC;AACvBK,EAAAA,UAAU,EAAE,UAASC,MAAT,EAAiBC,QAAjB,EAA2BC,QAA3B,EAAqCC,OAArC,EAA8C;AACxD,SAAKC,OAAL,GAAkBJ,MAAlB;AACA,SAAKK,SAAL,GAAkBJ,QAAlB;AACA,SAAKK,SAAL,GAAkBJ,QAAlB;AACA,SAAKK,QAAL,GAAkBJ,OAAlB;AACA,SAAKK,UAAL,GAAkB,KAAlB;AACD,GAPsB;AASvBC,EAAAA,WAAW,EAAE,UAASP,QAAT,EAAmBC,OAAnB,EAA4B;AACvC,SAAKO,YAAL,GAAoB,CAACR,QAAD,EAAWC,OAAX,CAApB;AACA,WAAO,IAAP;AACD,GAZsB;AAcvBQ,EAAAA,KAAK,EAAE,UAASR,OAAT,EAAkBS,IAAlB,EAAwB;AAC7B,QAAIC,OAAO,GAAGD,IAAI,CAAC,CAAD,CAAlB;AAEA,QAAI,KAAKN,SAAT,EACE,KAAKA,SAAL,CAAeQ,IAAf,CAAoB,KAAKP,QAAzB,EAAmCM,OAAO,CAACE,IAA3C;AAEF,QAAI,KAAKL,YAAT,EACE,KAAKA,YAAL,CAAkB,CAAlB,EAAqBI,IAArB,CAA0B,KAAKJ,YAAL,CAAkB,CAAlB,CAA1B,EAAgDG,OAAO,CAACG,OAAxD,EAAiEH,OAAO,CAACE,IAAzE;AACH,GAtBsB;AAwBvBE,EAAAA,MAAM,EAAE,YAAW;AACjB,QAAI,KAAKT,UAAT,EAAqB;;AACrB,SAAKJ,OAAL,CAAac,WAAb,CAAyB,KAAKb,SAA9B,EAAyC,IAAzC;;AACA,SAAKG,UAAL,GAAkB,IAAlB;AACD,GA5BsB;AA8BvBU,EAAAA,WAAW,EAAE,YAAW;AACtB,SAAKD,MAAL;AACD;AAhCsB,CAAD,CAAxB;AAmCArB,MAAM,CAACE,YAAY,CAACqB,SAAd,EAAyBtB,UAAzB,CAAN;AAEAuB,MAAM,CAACC,OAAP,GAAiBvB,YAAjB","sourcesContent":["'use strict';\n\nvar Class      = require('../util/class'),\n    assign     = require('../util/assign'),\n    Deferrable = require('../mixins/deferrable');\n\nvar Subscription = Class({\n  initialize: function(client, channels, callback, context) {\n    this._client    = client;\n    this._channels  = channels;\n    this._callback  = callback;\n    this._context   = context;\n    this._cancelled = false;\n  },\n\n  withChannel: function(callback, context) {\n    this._withChannel = [callback, context];\n    return this;\n  },\n\n  apply: function(context, args) {\n    var message = args[0];\n\n    if (this._callback)\n      this._callback.call(this._context, message.data);\n\n    if (this._withChannel)\n      this._withChannel[0].call(this._withChannel[1], message.channel, message.data);\n  },\n\n  cancel: function() {\n    if (this._cancelled) return;\n    this._client.unsubscribe(this._channels, this);\n    this._cancelled = true;\n  },\n\n  unsubscribe: function() {\n    this.cancel();\n  }\n});\n\nassign(Subscription.prototype, Deferrable);\n\nmodule.exports = Subscription;\n"]},"metadata":{},"sourceType":"script"}