{"ast":null,"code":"// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport removeOverlappingEntities from './removeOverlappingEntities';\nexport default function (text, options) {\n  var entities = extractUrlsWithIndices(text, options).concat(extractMentionsOrListsWithIndices(text)).concat(extractHashtagsWithIndices(text, {\n    checkUrlOverlap: false\n  })).concat(extractCashtagsWithIndices(text));\n\n  if (entities.length == 0) {\n    return [];\n  }\n\n  removeOverlappingEntities(entities);\n  return entities;\n}","map":{"version":3,"sources":["/home/scocarojas/Documents/prototype/front/node_modules/twitter-text/dist/esm/extractEntitiesWithIndices.js"],"names":["extractCashtagsWithIndices","extractHashtagsWithIndices","extractMentionsOrListsWithIndices","extractUrlsWithIndices","removeOverlappingEntities","text","options","entities","concat","checkUrlOverlap","length"],"mappings":"AAAA;AACA;AACA;AACA,OAAOA,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,0BAAP,MAAuC,8BAAvC;AACA,OAAOC,iCAAP,MAA8C,qCAA9C;AACA,OAAOC,sBAAP,MAAmC,0BAAnC;AACA,OAAOC,yBAAP,MAAsC,6BAAtC;AACA,eAAe,UAAUC,IAAV,EAAgBC,OAAhB,EAAyB;AACtC,MAAIC,QAAQ,GAAGJ,sBAAsB,CAACE,IAAD,EAAOC,OAAP,CAAtB,CAAsCE,MAAtC,CAA6CN,iCAAiC,CAACG,IAAD,CAA9E,EAAsFG,MAAtF,CAA6FP,0BAA0B,CAACI,IAAD,EAAO;AAC3II,IAAAA,eAAe,EAAE;AAD0H,GAAP,CAAvH,EAEXD,MAFW,CAEJR,0BAA0B,CAACK,IAAD,CAFtB,CAAf;;AAIA,MAAIE,QAAQ,CAACG,MAAT,IAAmB,CAAvB,EAA0B;AACxB,WAAO,EAAP;AACD;;AAEDN,EAAAA,yBAAyB,CAACG,QAAD,CAAzB;AACA,SAAOA,QAAP;AACD","sourcesContent":["// Copyright 2018 Twitter, Inc.\n// Licensed under the Apache License, Version 2.0\n// http://www.apache.org/licenses/LICENSE-2.0\nimport extractCashtagsWithIndices from './extractCashtagsWithIndices';\nimport extractHashtagsWithIndices from './extractHashtagsWithIndices';\nimport extractMentionsOrListsWithIndices from './extractMentionsOrListsWithIndices';\nimport extractUrlsWithIndices from './extractUrlsWithIndices';\nimport removeOverlappingEntities from './removeOverlappingEntities';\nexport default function (text, options) {\n  var entities = extractUrlsWithIndices(text, options).concat(extractMentionsOrListsWithIndices(text)).concat(extractHashtagsWithIndices(text, {\n    checkUrlOverlap: false\n  })).concat(extractCashtagsWithIndices(text));\n\n  if (entities.length == 0) {\n    return [];\n  }\n\n  removeOverlappingEntities(entities);\n  return entities;\n}"]},"metadata":{},"sourceType":"module"}